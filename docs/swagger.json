{
    "swagger": "2.0",
    "info": {
        "description": "This API Handle MELI - Sprint 1 - Grupo 2",
        "title": "MELI Bootcamp API - Sprint 1 - Grupo 2",
        "termsOfService": "https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones",
        "contact": {
            "name": "API Support",
            "url": "https://developers.mercadolibre.com.ar/support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/v1/buyers": {
            "get": {
                "description": "Get the details of all buyers on the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "List Buyers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Buyer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Save a buyer on the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Create Buyer",
                "parameters": [
                    {
                        "description": "Buyer to Create",
                        "name": "Seller",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateBuyerRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Buyer"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/buyers/{id}": {
            "get": {
                "description": "Get the details of a Buyer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Get Buyer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Buyer to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Buyer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Buyers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Delete Buyer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of a Buyer to be excluded",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of a Buyer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Update Buyer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Buyer to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Buyer details",
                        "name": "Buyer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateBuyerRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Buyer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/buyers/{id}/report-purchase-orders": {
            "get": {
                "description": "search for a purchaseOrder and return the number of sellers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "CountPurchaseOrders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of PurchaseOrder to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.GetNumberOfPurchaseOrdersByBuyerResponseDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/carriers": {
            "get": {
                "description": "get carriers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carriers"
                ],
                "summary": "List carriers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Carrier"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create carriers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carriers"
                ],
                "summary": "Create carriers",
                "parameters": [
                    {
                        "description": "carrier to create",
                        "name": "Carrier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CarrierRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Carrier"
                        }
                    }
                }
            }
        },
        "/api/v1/employees": {
            "get": {
                "description": "getAll employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "List Employees",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Create Employees",
                "parameters": [
                    {
                        "description": "Employee to Create",
                        "name": "Employees",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RequestCreateEmployee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/employees/{id}": {
            "get": {
                "description": "Get the details of a Employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Get Employees",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Employees to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Delete Employees",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of a Employees to be excluded",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of a Employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Update Employees",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Employees to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Employeesers details",
                        "name": "Employees",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RequestUpdateEmployee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/inbound-orders": {
            "get": {
                "description": "getAll inboundOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InboundOrders"
                ],
                "summary": "List InboundOrders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create inboundOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InboundOrders"
                ],
                "summary": "Create InboundOrders",
                "parameters": [
                    {
                        "description": "InboundOrders to Create",
                        "name": "InboundOrders",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RequestCreateInboundOrders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/inbound-orders/{id}": {
            "get": {
                "description": "Get the details of a InboundOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InboundOrders"
                ],
                "summary": "Get InboundOrders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of InboundOrders to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete InboundOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InboundOrders"
                ],
                "summary": "Delete InboundOrders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of a InboundOrders to be excluded",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of a InboundOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InboundOrders"
                ],
                "summary": "Update InboundOrders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of InboundOrders to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated InboundOrders details",
                        "name": "InboundOrders",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RequestUpdateInboundOrders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/localities": {
            "get": {
                "description": "Get the details of all localities on the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "List Localities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Locality"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Save a locality on the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "Create Locality",
                "parameters": [
                    {
                        "description": "Locality to Create",
                        "name": "Seller",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Locality"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Locality"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/localities/count": {
            "get": {
                "description": "search for a locality and return the number of sellers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "CountSellers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Locality to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.GetNumberOfSellersResponseDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/localities/reportCarries": {
            "get": {
                "description": "get report carriers by localities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carriers"
                ],
                "summary": "Get Report Carriers By Localities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of a Locality to search",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.DataLocalityAndCarrier"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/localities/{id}": {
            "get": {
                "description": "Get the details of a Locality",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "Get Locality",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Locality to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Locality"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Localities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "Delete Locality",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of a Locality to be excluded",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of a Locality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "Update Locality",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Locality to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Locality details",
                        "name": "Locality",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateLocalityRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Locality"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/productBatches": {
            "post": {
                "description": "Create ProductBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductBatch"
                ],
                "summary": "Create ProductBatch",
                "parameters": [
                    {
                        "description": "ProductBatch to Create",
                        "name": "ProductBatch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/productbatchesdto.CreateProductBatchesDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "description": "getAll products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "List products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create Product",
                "parameters": [
                    {
                        "description": "Product to Create",
                        "name": "Product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/products.RequestCreateProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "description": "Get the details of a Products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Product to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of a Product to be excluded",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of a Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Products to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Product details",
                        "name": "Products",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/products.RequestUpdateProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/productsRecords": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductsRecords"
                ],
                "summary": "List productsRecords",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductsRecords"
                ],
                "summary": "Create ProductRecord",
                "parameters": [
                    {
                        "description": "ProductRecord to Create",
                        "name": "ProductRecord",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/productsRecords.RequestCreateProductRecord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/productsRecords/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductsRecords"
                ],
                "summary": "Get ProductRecord",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of ProductRecord to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete ProductRecord",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductsRecords"
                ],
                "summary": "Delete ProductRecord",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of a ProductRecord to be excluded",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductsRecords"
                ],
                "summary": "Update ProductRecord",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of ProductsRecords to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated ProductRecord details",
                        "name": "ProductsRecords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/productsRecords.RequestUpdateProductRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/purchase-orders": {
            "get": {
                "description": "Get the details of all purchase-orders on the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "List PurchaseOrders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.PurchaseOrder"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Save a purchaseOrder on the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Create PurchaseOrder",
                "parameters": [
                    {
                        "description": "PurchaseOrder to Create",
                        "name": "Seller",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.PurchaseOrder"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/purchase-orders/{id}": {
            "get": {
                "description": "Get the details of a PurchaseOrder",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Get PurchaseOrder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of PurchaseOrder to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.PurchaseOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete PurchaseOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Delete PurchaseOrder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of a PurchaseOrder to be excluded",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of a PurchaseOrder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Update PurchaseOrder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of PurchaseOrder to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated PurchaseOrder details",
                        "name": "PurchaseOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdatePurchaseOrderRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.PurchaseOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/reportInboundOrders": {
            "get": {
                "description": "get countInboundOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CountInboundOrders"
                ],
                "summary": "List InboundOrders Count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/reportInboundOrders/{id}": {
            "get": {
                "description": "get countInboundOrdersById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CountInboundOrdersByID"
                ],
                "summary": "List InboundOrders Count by Id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/sections": {
            "get": {
                "description": "getAll sections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "List sections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create section",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Create Section",
                "parameters": [
                    {
                        "description": "Section to Create",
                        "name": "Section",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sections.CreateSectionRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/sections/reportProducts/{id}": {
            "get": {
                "description": "Get all products by section / Section Products Reports By Section",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductBatch"
                ],
                "summary": "SectionProductsReports / SectionProductsReportsBySection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of a Products Reports to search",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.ProductBySection"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/sections/{id}": {
            "get": {
                "description": "Get the details of a Section",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Get Section",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Section to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Section",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Delete Section",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of a Section to be excluded",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of a Section",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Update Section",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Section to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Section details",
                        "name": "Sections",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sections.UpdateSectionRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/sellers": {
            "get": {
                "description": "getAll sellers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "List sellers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create sellers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Create Sellers",
                "parameters": [
                    {
                        "description": "Seller to Create",
                        "name": "Seller",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateSellerRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/sellers/{id}": {
            "get": {
                "description": "Get the details of a Sellers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Get Sellers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Sellers to be searched",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Sellers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Delete Sellers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of a Sellers to be excluded",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of a Sellers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Update Sellers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Sellers to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Sellers details",
                        "name": "Sellers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateSellerRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/warehouses": {
            "get": {
                "description": "get warehouses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "List warehouses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Warehouse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Create warehouses",
                "parameters": [
                    {
                        "description": "warehouses to create",
                        "name": "Warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.WarehouseRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Warehouse"
                        }
                    }
                }
            }
        },
        "/api/v1/warehouses/{id}": {
            "get": {
                "description": "get one warehouses by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get warehouses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Warehouse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete warehouses by id",
                "tags": [
                    "Warehouses"
                ],
                "summary": "Delete warehouses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "update warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update warehouses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Warehouse to update",
                        "name": "Warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.WarehouseRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Warehouse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Buyer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "card_number_id": {
                    "type": "string",
                    "x-order": "1"
                },
                "first_name": {
                    "type": "string",
                    "x-order": "2"
                },
                "last_name": {
                    "type": "string",
                    "x-order": "3"
                }
            }
        },
        "domain.Carrier": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locality_id": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "domain.Locality": {
            "type": "object",
            "required": [
                "country_name",
                "id",
                "locality_name",
                "province_name"
            ],
            "properties": {
                "country_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locality_name": {
                    "type": "string"
                },
                "province_name": {
                    "type": "string"
                }
            }
        },
        "domain.ProductBySection": {
            "type": "object",
            "properties": {
                "products_count": {
                    "type": "integer"
                },
                "section_id": {
                    "type": "integer"
                },
                "section_number": {
                    "type": "string"
                }
            }
        },
        "domain.PurchaseOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "order_number": {
                    "type": "string",
                    "x-order": "1"
                },
                "order_date": {
                    "type": "string",
                    "format": "2006-01-02",
                    "x-order": "2"
                },
                "tracking_code": {
                    "type": "string",
                    "x-order": "3"
                },
                "buyer_id": {
                    "type": "integer",
                    "x-order": "4"
                },
                "carrier_id": {
                    "type": "integer",
                    "x-order": "5"
                },
                "order_status_id": {
                    "type": "integer",
                    "x-order": "6"
                },
                "warehouse_id": {
                    "type": "integer",
                    "x-order": "7"
                },
                "product_record_id": {
                    "type": "integer",
                    "x-order": "8"
                }
            }
        },
        "domain.RequestCreateEmployee": {
            "type": "object",
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "domain.RequestCreateInboundOrders": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "string"
                },
                "order_date": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "product_batch_id": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "string"
                }
            }
        },
        "domain.RequestUpdateEmployee": {
            "type": "object",
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "domain.RequestUpdateInboundOrders": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "string"
                },
                "order_date": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "product_batch_id": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "string"
                }
            }
        },
        "domain.Warehouse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                },
                "warehouse_code": {
                    "type": "string"
                }
            }
        },
        "dtos.CarrierRequestDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "locality_id": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateBuyerRequestDTO": {
            "type": "object",
            "required": [
                "card_number_id",
                "first_name",
                "last_name"
            ],
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateSellerRequestDTO": {
            "type": "object",
            "required": [
                "address",
                "cid",
                "company_name",
                "locality_id",
                "telephone"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "locality_id": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "dtos.DataLocalityAndCarrier": {
            "type": "object",
            "properties": {
                "count_carrier": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "locality_name": {
                    "type": "string"
                }
            }
        },
        "dtos.GetNumberOfPurchaseOrdersByBuyerResponseDTO": {
            "type": "object",
            "properties": {
                "buyer_id": {
                    "type": "integer"
                },
                "purchase_orders_count": {
                    "description": "LocalityName string `json:\"locality_name\"`",
                    "type": "integer"
                }
            }
        },
        "dtos.GetNumberOfSellersResponseDTO": {
            "type": "object",
            "properties": {
                "locality_id": {
                    "type": "integer"
                },
                "locality_name": {
                    "type": "string"
                },
                "sellers_count": {
                    "type": "integer"
                }
            }
        },
        "dtos.UpdateBuyerRequestDTO": {
            "type": "object",
            "properties": {
                "card_number_id": {
                    "type": "string",
                    "x-order": "0"
                },
                "first_name": {
                    "type": "string",
                    "x-order": "1"
                },
                "last_name": {
                    "type": "string",
                    "x-order": "2"
                }
            }
        },
        "dtos.UpdateLocalityRequestDTO": {
            "type": "object",
            "properties": {
                "country_name": {
                    "type": "string"
                },
                "locality_name": {
                    "type": "string"
                },
                "province_name": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdatePurchaseOrderRequestDTO": {
            "type": "object",
            "properties": {
                "buyer_id": {
                    "type": "integer"
                },
                "carrier_id": {
                    "type": "integer"
                },
                "order_date": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "order_status_id": {
                    "type": "integer"
                },
                "product_record_id": {
                    "type": "integer"
                },
                "tracking_code": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.UpdateSellerRequestDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "locality_id": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "dtos.WarehouseRequestDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                },
                "warehouse_code": {
                    "type": "string"
                }
            }
        },
        "productbatchesdto.CreateProductBatchesDTO": {
            "type": "object",
            "required": [
                "batch_number",
                "current_quantity",
                "current_temperature",
                "due_date",
                "initial_quantity",
                "manufacturing_date",
                "manufacturing_hour",
                "minimum_temperature",
                "product_id",
                "section_id"
            ],
            "properties": {
                "batch_number": {
                    "type": "integer"
                },
                "current_quantity": {
                    "type": "integer"
                },
                "current_temperature": {
                    "type": "number"
                },
                "due_date": {
                    "description": "Example: \"2023-07-06\"",
                    "type": "string"
                },
                "initial_quantity": {
                    "type": "integer"
                },
                "manufacturing_date": {
                    "type": "string"
                },
                "manufacturing_hour": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "section_id": {
                    "type": "integer"
                }
            }
        },
        "products.RequestCreateProduct": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expiration_rate": {
                    "type": "integer"
                },
                "freezing_rate": {
                    "type": "integer"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "netweight": {
                    "type": "number"
                },
                "product_code": {
                    "type": "string"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "recommended_freezing_temperature": {
                    "type": "number"
                },
                "seller_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "products.RequestUpdateProduct": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expiration_rate": {
                    "type": "integer"
                },
                "freezing_rate": {
                    "type": "integer"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "netweight": {
                    "type": "number"
                },
                "product_code": {
                    "type": "string"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "recommended_freezing_temperature": {
                    "type": "number"
                },
                "seller_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "productsRecords.RequestCreateProductRecord": {
            "type": "object",
            "properties": {
                "last_update_date": {
                    "type": "string"
                },
                "product_id": {
                    "type": "integer"
                },
                "purchase_price": {
                    "type": "number"
                },
                "sale_price": {
                    "type": "number"
                }
            }
        },
        "productsRecords.RequestUpdateProductRecord": {
            "type": "object",
            "properties": {
                "last_update_date": {
                    "type": "string"
                },
                "product_id": {
                    "type": "integer"
                },
                "purchase_price": {
                    "type": "number"
                },
                "sale_price": {
                    "type": "number"
                }
            }
        },
        "sections.CreateSectionRequestDTO": {
            "type": "object",
            "properties": {
                "current_capacity": {
                    "type": "integer"
                },
                "current_temperature": {
                    "type": "integer"
                },
                "maximum_capacity": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "section_number": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "sections.UpdateSectionRequestDTO": {
            "type": "object",
            "properties": {
                "current_capacity": {
                    "type": "integer"
                },
                "current_temperature": {
                    "type": "integer"
                },
                "maximum_capacity": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "section_number": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "web.errorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "web.response": {
            "type": "object",
            "properties": {
                "data": {}
            }
        }
    }
}